name: CD (Deploy to VPS)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Préparer dossier sur le VPS
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_KEY }}
          script: |
            set -e
            rm -rf /home/ubuntu/planning-app-new
            mkdir -p /home/ubuntu/planning-app-new

      - name: Copier projet sur le VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_KEY }}
          source: "./"
          target: "/home/ubuntu/planning-app-new"

      - name: Vérifier arborescence sur le VPS
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_KEY }}
          script: |
            echo "=== Contenu de /home/ubuntu/planning-app-new ==="
            ls -la /home/ubuntu/planning-app-new

      - name: Déployer avec Docker Compose
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_KEY }}
          script: |
            set -e
            cd /home/ubuntu/planning-app-new
            if [ ! -f docker-compose.yml ]; then
              echo "❌ ERREUR : docker-compose.yml introuvable dans $(pwd)"
              exit 1
            fi
            docker compose up -d --build
            docker compose exec -T planningBackend python manage.py migrate --noinput