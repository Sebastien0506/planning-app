name: CD (Deploy to VPS)

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo avec sous-modules
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Vérifier la présence des Dockerfile
        run: |
          ls -R planningBack | grep Dockerfile || echo "Dockerfile backend manquant"
          ls -R planningFront | grep Dockerfile || echo "Dockerfile frontend manquant"

      - name: Déploiement SSH - préparer dossier
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_KEY }}
          script: |
            rm -rf /home/ubuntu/planning-app-new
            mkdir -p /home/ubuntu/planning-app-new

      - name: Copier projet vers VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_KEY }}
          source: "./"
          target: "/home/ubuntu/planning-app-new"

      - name: Lancer Docker Compose
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_KEY }}
          script: |
            set -e
            cd /home/ubuntu/planning-app-new

            # 1) Créer le .env du backend (ligne unique)
            echo "SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}" > planningBack/.env

            # 2) Redémarrer proprement (ignore l'erreur si pas encore créé)
            docker compose down || true

            # 3) Build & run
            docker compose up -d --build

            # 4) Migrations
            docker compose exec -T planningBackend python manage.py migrate --noinput