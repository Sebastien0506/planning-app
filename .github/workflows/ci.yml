name: CI

on:
  push:
    branches: ["**"]
  pull_request:

jobs:
  backend:
    name: Backend (Django) - lint & tests
    runs-on: ubuntu-latest

    # le job tourne dans le même réseau que le service "db"
    container: python:3.11

    services:
      db:
        image: postgres:17
        env:
          POSTGRES_DB: planningback
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: admin
        options: >-
          --health-cmd="pg_isready -U postgres -d planningback -h db"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=20

    env:
      DJANGO_SETTINGS_MODULE: planningBack.settings
      SECRET_KEY: ci-secret-key
      DEBUG: "True"
      ALLOWED_HOSTS: "*"
      CSRF_TRUSTED_ORIGINS: "http://localhost"
      DB_NAME: planningback
      DB_USER: postgres
      DB_PASSWORD: admin
      DB_HOST: db
      DB_PORT: "5432"

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Afficher l’arborescence
        run: |
          pwd
          ls -la
          ls -la planningBack || true
          ls -la planningFront || true

      - name: Installer les dépendances backend
        run: pip install -r planningBack/requirements.txt

      - name: Créer .env pour la CI
        run: |
          cat > planningBack/.env << 'EOF'
          SECRET_KEY=ci-secret-key
          DEBUG=True
          ALLOWED_HOSTS=*
          CSRF_TRUSTED_ORIGINS=http://localhost
          DB_NAME=planningback
          DB_USER=postgres
          DB_PASSWORD=admin
          DB_HOST=db
          DB_PORT=5432
          EOF

      - name: Vérifier Django
        working-directory: planningBack
        run: python manage.py check

      - name: Installer les libs de test
        run: pip install pytest pytest-django pytest-cov

      - name: Lancer les tests (JUnit + coverage)
        working-directory: planningBack
        run: |
          pytest -q --maxfail=1 --disable-warnings \
            --cov=. --cov-report=xml:coverage.xml \
            --junitxml=pytest-junit.xml

      - name: Publier les rapports de test
        uses: actions/upload-artifact@v4
        with:
          name: backend-rapports
          path: |
            planningBack/pytest-junit.xml
            planningBack/coverage.xml

  frontend:
    name: Frontend (Angular) - lint & build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: planningFront
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Afficher l’arborescence
        run: |
          pwd
          ls -la
          ls -la planningFront || true

      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: planningFront/package-lock.json

      - name: Installer les dépendances frontend
        run: npm install

      - name: Lint (non bloquant)
        run: npm run lint || echo "lint warnings"

      - name: Build
        run: npm run build --if-present